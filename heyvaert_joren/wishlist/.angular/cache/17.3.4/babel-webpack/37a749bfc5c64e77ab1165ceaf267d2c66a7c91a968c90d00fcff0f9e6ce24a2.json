{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, Pipe } from '@angular/core';\nlet SortItemsByDatePipe = class SortItemsByDatePipe {\n  transform(items) {\n    if (!items || items.length == 0) {\n      return items;\n    }\n    return items.sort((a, b) => {\n      const datumA = this.getDate(a.toegevoegOp).getTime();\n      const datumB = this.getDate(b.toegevoegOp).getTime();\n      return datumA - datumB;\n    }).reverse();\n  }\n  // FireBase timestap to date object\n  getDate(dateField) {\n    if (dateField && dateField.toDate) {\n      return dateField.toDate();\n    }\n    return new Date(dateField);\n  }\n};\nSortItemsByDatePipe = __decorate([Pipe({\n  name: 'sortItemsByDate',\n  standalone: true\n}), Injectable({\n  providedIn: 'root'\n})], SortItemsByDatePipe);\nexport { SortItemsByDatePipe };","map":{"version":3,"names":["Injectable","Pipe","SortItemsByDatePipe","transform","items","length","sort","a","b","datumA","getDate","toegevoegOp","getTime","datumB","reverse","dateField","toDate","Date","__decorate","name","standalone","providedIn"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\sort-items-by-date.pipe.ts"],"sourcesContent":["import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { item } from './item-component/item.model';\r\n\r\n@Pipe({\r\n  name: 'sortItemsByDate',\r\n  standalone: true\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SortItemsByDatePipe implements PipeTransform {\r\n\r\n  transform(items: item[]): item[] {\r\n    if(!items || items.length == 0)\r\n    {\r\n      return items;\r\n    }\r\n\r\n    return items.sort((a, b) => {\r\n      const datumA = this.getDate(a.toegevoegOp).getTime();\r\n      const datumB = this.getDate(b.toegevoegOp).getTime();\r\n\r\n      return datumA - datumB;\r\n    }).reverse();\r\n  }\r\n\r\n  // FireBase timestap to date object\r\n  private getDate(dateField: any): Date {\r\n    if (dateField && dateField.toDate) {\r\n      return dateField.toDate();\r\n    }\r\n    return new Date(dateField);\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,IAAI,QAAuB,eAAe;AAUxD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,SAASA,CAACC,KAAa;IACrB,IAAG,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,IAAI,CAAC,EAC9B;MACE,OAAOD,KAAK;IACd;IAEA,OAAOA,KAAK,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACzB,MAAMC,MAAM,GAAG,IAAI,CAACC,OAAO,CAACH,CAAC,CAACI,WAAW,CAAC,CAACC,OAAO,EAAE;MACpD,MAAMC,MAAM,GAAG,IAAI,CAACH,OAAO,CAACF,CAAC,CAACG,WAAW,CAAC,CAACC,OAAO,EAAE;MAEpD,OAAOH,MAAM,GAAGI,MAAM;IACxB,CAAC,CAAC,CAACC,OAAO,EAAE;EACd;EAEA;EACQJ,OAAOA,CAACK,SAAc;IAC5B,IAAIA,SAAS,IAAIA,SAAS,CAACC,MAAM,EAAE;MACjC,OAAOD,SAAS,CAACC,MAAM,EAAE;IAC3B;IACA,OAAO,IAAIC,IAAI,CAACF,SAAS,CAAC;EAC5B;CAED;AAxBYb,mBAAmB,GAAAgB,UAAA,EAP/BjB,IAAI,CAAC;EACJkB,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;CACb,CAAC,EACDpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EACWnB,mBAAmB,CAwB/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}