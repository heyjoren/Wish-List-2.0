{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { map, Subject, from } from 'rxjs';\nimport { collection, collectionData, deleteDoc, doc, Firestore, setDoc } from '@angular/fire/firestore';\nlet BedragService = class BedragService {\n  constructor(db) {\n    this.db = db;\n    this.bedragen = [];\n    this.bedragenUpdated = new Subject();\n    this.selectedItemId = null;\n  }\n  getBedragen() {\n    return collectionData(collection(this.db, 'bedrag'), {\n      idField: 'id'\n    });\n  }\n  getBedragenPut() {\n    this.getBedragen().subscribe({\n      next: response => {\n        this.bedragen = response;\n        this.bedragenUpdated.next(this.bedragen);\n      },\n      error: error => console.log('error: ', error)\n    });\n  }\n  getLastBedragen() {\n    return this.getBedragen().pipe(map(bedragen => bedragen.slice(-5)));\n  }\n  addBedrag(bedrag) {\n    const newID = doc(collection(this.db, 'id')).id;\n    const ref = doc(this.db, 'bedrag/' + newID);\n    return from(setDoc(ref, bedrag));\n  }\n  deleteBedrag(id) {\n    const bedragRef = doc(this.db, 'bedrag/' + id);\n    return from(deleteDoc(bedragRef));\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Firestore\n  }];\n};\nBedragService = __decorate([Injectable({\n  providedIn: 'root'\n})], BedragService);\nexport { BedragService };","map":{"version":3,"names":["Injectable","map","Subject","from","collection","collectionData","deleteDoc","doc","Firestore","setDoc","BedragService","constructor","db","bedragen","bedragenUpdated","selectedItemId","getBedragen","idField","getBedragenPut","subscribe","next","response","error","console","log","getLastBedragen","pipe","slice","addBedrag","bedrag","newID","id","ref","deleteBedrag","bedragRef","_","__decorate","providedIn"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\bedrag\\bedrag.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, map, tap, Subject, from   } from 'rxjs';\r\nimport { bedrag } from './bedrag.model';\r\nimport { collection, collectionData, CollectionReference, deleteDoc, doc, DocumentReference, Firestore, setDoc } from '@angular/fire/firestore';\r\nimport { formatCurrency } from '@angular/common';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BedragService {\r\n  bedragen: bedrag[] = [];\r\n  bedragenUpdated = new Subject<bedrag[]>();\r\n  selectedItemId: string | null = null;\r\n\r\n  constructor(private db: Firestore ) { }\r\n\r\n  getBedragen(): Observable<bedrag[]> {\r\n    return collectionData<bedrag>(\r\n      collection(this.db, 'bedrag') as CollectionReference<bedrag>,\r\n      { idField: 'id' }\r\n    )\r\n  }\r\n\r\n  getBedragenPut(): void {\r\n    this.getBedragen().subscribe({  \r\n      next: (response: bedrag[]) => {\r\n        this.bedragen = response;\r\n        this.bedragenUpdated.next(this.bedragen);\r\n      },\r\n    error: (error) => console.log('error: ', error)\r\n    });\r\n  }\r\n\r\n  getLastBedragen(): Observable<bedrag[]> {\r\n    return this.getBedragen().pipe(\r\n      map(bedragen => bedragen.slice(-5))\r\n    );\r\n  }\r\n\r\n\r\n  addBedrag(bedrag: bedrag) {\r\n    const newID = doc(collection(this.db, 'id')).id;\r\n    const ref = doc(this.db, 'bedrag/' + newID);\r\n    return from (setDoc(ref, bedrag));\r\n  }\r\n\r\n  deleteBedrag(id: string) {\r\n    const bedragRef = doc(this.db, 'bedrag/' + id) as DocumentReference<bedrag>;\r\n    return from(deleteDoc(bedragRef));\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAqBC,GAAG,EAAOC,OAAO,EAAEC,IAAI,QAAU,MAAM;AAE5D,SAASC,UAAU,EAAEC,cAAc,EAAuBC,SAAS,EAAEC,GAAG,EAAqBC,SAAS,EAAEC,MAAM,QAAQ,yBAAyB;AAOxI,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,EAAa;IAAb,KAAAA,EAAE,GAAFA,EAAE;IAJtB,KAAAC,QAAQ,GAAa,EAAE;IACvB,KAAAC,eAAe,GAAG,IAAIZ,OAAO,EAAY;IACzC,KAAAa,cAAc,GAAkB,IAAI;EAEE;EAEtCC,WAAWA,CAAA;IACT,OAAOX,cAAc,CACnBD,UAAU,CAAC,IAAI,CAACQ,EAAE,EAAE,QAAQ,CAAgC,EAC5D;MAAEK,OAAO,EAAE;IAAI,CAAE,CAClB;EACH;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACF,WAAW,EAAE,CAACG,SAAS,CAAC;MAC3BC,IAAI,EAAGC,QAAkB,IAAI;QAC3B,IAAI,CAACR,QAAQ,GAAGQ,QAAQ;QACxB,IAAI,CAACP,eAAe,CAACM,IAAI,CAAC,IAAI,CAACP,QAAQ,CAAC;MAC1C,CAAC;MACHS,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK;KAC7C,CAAC;EACJ;EAEAG,eAAeA,CAAA;IACb,OAAO,IAAI,CAACT,WAAW,EAAE,CAACU,IAAI,CAC5BzB,GAAG,CAACY,QAAQ,IAAIA,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACpC;EACH;EAGAC,SAASA,CAACC,MAAc;IACtB,MAAMC,KAAK,GAAGvB,GAAG,CAACH,UAAU,CAAC,IAAI,CAACQ,EAAE,EAAE,IAAI,CAAC,CAAC,CAACmB,EAAE;IAC/C,MAAMC,GAAG,GAAGzB,GAAG,CAAC,IAAI,CAACK,EAAE,EAAE,SAAS,GAAGkB,KAAK,CAAC;IAC3C,OAAO3B,IAAI,CAAEM,MAAM,CAACuB,GAAG,EAAEH,MAAM,CAAC,CAAC;EACnC;EAEAI,YAAYA,CAACF,EAAU;IACrB,MAAMG,SAAS,GAAG3B,GAAG,CAAC,IAAI,CAACK,EAAE,EAAE,SAAS,GAAGmB,EAAE,CAA8B;IAC3E,OAAO5B,IAAI,CAACG,SAAS,CAAC4B,SAAS,CAAC,CAAC;EACnC;EAAC,QAAAC,CAAA,G;;;;AAxCUzB,aAAa,GAAA0B,UAAA,EAHzBpC,UAAU,CAAC;EACVqC,UAAU,EAAE;CACb,CAAC,C,EACW3B,aAAa,CA0CzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}