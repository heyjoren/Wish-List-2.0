{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nlet DialogService = class DialogService {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  openInDialog(Component) {\n    return this.dialog.open(Component, {\n      width: '800px',\n      disableClose: true\n    });\n  }\n  closeDialog(dialogRef) {\n    dialogRef.close();\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: MatDialog\n  }];\n};\nDialogService = __decorate([Injectable({\n  providedIn: 'root'\n})], DialogService);\nexport { DialogService };","map":{"version":3,"names":["Injectable","MatDialog","DialogService","constructor","dialog","openInDialog","Component","open","width","disableClose","closeDialog","dialogRef","close","_","__decorate","providedIn"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\dialog.service.ts"],"sourcesContent":["import { ComponentType } from '@angular/cdk/portal';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  openInDialog(Component: ComponentType<any>){\r\n    return this.dialog.open(Component, {\r\n      width: '800px',\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  closeDialog(dialogRef: MatDialogRef<any>): void{\r\n    dialogRef.close();\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,SAAS,QAAsB,0BAA0B;AAK3D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAoBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;EAAe;EAEzCC,YAAYA,CAACC,SAA6B;IACxC,OAAO,IAAI,CAACF,MAAM,CAACG,IAAI,CAACD,SAAS,EAAE;MACjCE,KAAK,EAAE,OAAO;MACdC,YAAY,EAAE;KACf,CAAC;EACJ;EAEAC,WAAWA,CAACC,SAA4B;IACtCA,SAAS,CAACC,KAAK,EAAE;EACnB;EAAC,QAAAC,CAAA,G;;;;AAbUX,aAAa,GAAAY,UAAA,EAHzBd,UAAU,CAAC;EACVe,UAAU,EAAE;CACb,CAAC,C,EACWb,aAAa,CAczB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}