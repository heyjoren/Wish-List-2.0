{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./welkom.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./welkom.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { getDownloadURL, ref, Storage } from '@angular/fire/storage';\nimport { BackendAdminService } from '../auth/admin/backend-admin.service';\nlet WelkomComponent = class WelkomComponent {\n  constructor(authService, router, storage, adminService) {\n    this.authService = authService;\n    this.router = router;\n    this.storage = storage;\n    this.adminService = adminService;\n    this.isLoggedIn = false;\n    this.Logo = \"\";\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.authService.getUid();\n    this.getLogo();\n  }\n  getLogo() {\n    const logoRef = ref(this.storage, 'logo/logo.webp'); // Vervang dit door het juiste pad naar je logo in Firebase Storage\n    getDownloadURL(logoRef).then(url => {\n      this.Logo = url; // Stel de Logo-variabele in met de URL van de afbeelding\n    }).catch(error => {\n      console.error('Error fetching logo: ', error); // Log eventuele fouten\n    });\n  }\n  login() {\n    this.router.navigate(['login']);\n  }\n  signUp() {\n    this.router.navigate(['signUp']);\n  }\n  logout() {\n    this.authService.logOut();\n    this.adminService.checkAdmin(false);\n    this.isLoggedIn = false;\n    this.router.navigate(['']);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: AuthService\n  }, {\n    type: Router\n  }, {\n    type: Storage\n  }, {\n    type: BackendAdminService\n  }];\n};\nWelkomComponent = __decorate([Component({\n  selector: 'app-welkom',\n  standalone: true,\n  imports: [CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], WelkomComponent);\nexport { WelkomComponent };","map":{"version":3,"names":["CommonModule","Component","AuthService","Router","getDownloadURL","ref","Storage","BackendAdminService","WelkomComponent","constructor","authService","router","storage","adminService","isLoggedIn","Logo","ngOnInit","getUid","getLogo","logoRef","then","url","catch","error","console","login","navigate","signUp","logout","logOut","checkAdmin","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\welkom\\welkom.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { getDownloadURL, ref, Storage } from '@angular/fire/storage';\r\nimport { BackendAdminService } from '../auth/admin/backend-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-welkom',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './welkom.component.html',\r\n  styleUrl: './welkom.component.css'\r\n})\r\nexport class WelkomComponent {\r\n  isLoggedIn: boolean= false\r\n  Logo: string = \"\";\r\n\r\n  constructor(private authService: AuthService, private router: Router, private storage : Storage, private adminService: BackendAdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.authService.getUid();\r\n    this.getLogo();\r\n  }\r\n\r\n  getLogo() {\r\n    const logoRef = ref(this.storage, 'logo/logo.webp');  // Vervang dit door het juiste pad naar je logo in Firebase Storage\r\n\r\n    getDownloadURL(logoRef)\r\n      .then((url) => {\r\n        this.Logo = url;  // Stel de Logo-variabele in met de URL van de afbeelding\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching logo: ', error);  // Log eventuele fouten\r\n      });\r\n  }\r\n\r\n\r\n\r\n  login(){\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  signUp(){\r\n    this.router.navigate(['signUp']);\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logOut();\r\n    this.adminService.checkAdmin(false);\r\n    this.isLoggedIn = false;\r\n    this.router.navigate([''])\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,cAAc,EAAEC,GAAG,EAAEC,OAAO,QAAQ,uBAAuB;AACpE,SAASC,mBAAmB,QAAQ,qCAAqC;AASlE,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,OAAiB,EAAUC,YAAiC;IAAtH,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,OAAO,GAAPA,OAAO;IAAoB,KAAAC,YAAY,GAAZA,YAAY;IAHrH,KAAAC,UAAU,GAAW,KAAK;IAC1B,KAAAC,IAAI,GAAW,EAAE;EAE6H;EAE9IC,QAAQA,CAAA;IACN,IAAI,CAACF,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACO,MAAM,EAAE;IAC3C,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL,MAAMC,OAAO,GAAGd,GAAG,CAAC,IAAI,CAACO,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAE;IAEtDR,cAAc,CAACe,OAAO,CAAC,CACpBC,IAAI,CAAEC,GAAG,IAAI;MACZ,IAAI,CAACN,IAAI,GAAGM,GAAG,CAAC,CAAE;IACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAI;MACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAE;IAClD,CAAC,CAAC;EACN;EAIAE,KAAKA,CAAA;IACH,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAChB,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAAClB,WAAW,CAACmB,MAAM,EAAE;IACzB,IAAI,CAAChB,YAAY,CAACiB,UAAU,CAAC,KAAK,CAAC;IACnC,IAAI,CAAChB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACH,MAAM,CAACe,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAAC,QAAAK,CAAA,G;;;;;;;;;;AAtCUvB,eAAe,GAAAwB,UAAA,EAP3B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACnC,YAAY,CAAC;EACvBoC,QAAA,EAAAC,oBAAsC;;CAEvC,CAAC,C,EACW7B,eAAe,CAuC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}