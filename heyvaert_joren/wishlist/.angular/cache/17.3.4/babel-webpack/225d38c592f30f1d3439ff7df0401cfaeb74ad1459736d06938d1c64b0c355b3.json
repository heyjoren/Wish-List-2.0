{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { map } from 'rxjs';\nimport { BackendAdminService } from './admin/backend-admin.service';\nexport const isLoggedInGaurd = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    router.navigate(['']);\n    return false;\n  }\n  return true;\n};\nexport const loggedInGaurd = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (!authService.isLoggedIn()) {\n    router.navigate(['login']);\n    return false;\n  }\n  return true;\n};\nexport const loggedInChildGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (!authService.isLoggedIn()) {\n    router.navigate(['login']);\n    return false;\n  }\n  return true;\n};\n;\nexport const deactivateGaurd = component => {\n  if (component.canDeactivate) {\n    return component.canDeactivate();\n  }\n  return true;\n};\nexport const adminGaurd = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const adminService = inject(BackendAdminService);\n  return adminService.getAdmin(authService.getUid()).pipe(map(isadmin => {\n    if (isadmin) {\n      return true;\n    } else {\n      return false;\n    }\n  }));\n};\nexport const loggedInLoadGaurd = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (!authService.isLoggedIn()) {\n    router.navigate(['login']);\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","Router","AuthService","map","BackendAdminService","isLoggedInGaurd","route","state","authService","router","isLoggedIn","navigate","loggedInGaurd","loggedInChildGuard","deactivateGaurd","component","canDeactivate","adminGaurd","adminService","getAdmin","getUid","pipe","isadmin","loggedInLoadGaurd"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\auth\\route-access.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateChildFn, CanActivateFn, CanDeactivateFn, CanMatchFn, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { map, Observable } from 'rxjs';\r\nimport { BackendAdminService } from './admin/backend-admin.service';\r\nimport { admin } from './admin/admin/admin.module';\r\n\r\nexport const isLoggedInGaurd: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if(authService.isLoggedIn())\r\n  {\r\n    router.navigate(['']);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const loggedInGaurd: CanActivateFn =  (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if(!authService.isLoggedIn())\r\n  {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const loggedInChildGuard: CanActivateChildFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if(!authService.isLoggedIn())\r\n    {\r\n      router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n};\r\n\r\nexport const deactivateGaurd: CanDeactivateFn<CanComponentDeactivate> = (component: CanComponentDeactivate) => {\r\n  if (component.canDeactivate)\r\n  {\r\n    return component.canDeactivate();\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const adminGaurd: CanActivateFn =  (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n  const adminService = inject(BackendAdminService);\r\n\r\n  return adminService.getAdmin(authService.getUid())\r\n  .pipe(map(\r\n    (isadmin: admin|undefined) => {\r\n      if(isadmin)\r\n      {\r\n        return true;\r\n      }\r\n      else\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n  ));\r\n};\r\n\r\nexport const loggedInLoadGaurd: CanMatchFn =  (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if(!authService.isLoggedIn())\r\n  {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n  return true;\r\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAyEC,MAAM,QAAQ,iBAAiB;AACxG,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,GAAG,QAAoB,MAAM;AACtC,SAASC,mBAAmB,QAAQ,+BAA+B;AAGnE,OAAO,MAAMC,eAAe,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC7D,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAGO,WAAW,CAACE,UAAU,EAAE,EAC3B;IACED,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,aAAa,GAAmBA,CAACN,KAAK,EAAEC,KAAK,KAAI;EAC5D,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAG,CAACO,WAAW,CAACE,UAAU,EAAE,EAC5B;IACED,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAuBA,CAACP,KAAK,EAAEC,KAAK,KAAI;EACrE,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAG,CAACO,WAAW,CAACE,UAAU,EAAE,EAC1B;IACED,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACf,CAAC;AAIA;AAED,OAAO,MAAMG,eAAe,GAA6CC,SAAiC,IAAI;EAC5G,IAAIA,SAAS,CAACC,aAAa,EAC3B;IACE,OAAOD,SAAS,CAACC,aAAa,EAAE;EAClC;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAmBA,CAACX,KAAK,EAAEC,KAAK,KAAI;EACzD,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAC7B,MAAMiB,YAAY,GAAGlB,MAAM,CAACI,mBAAmB,CAAC;EAEhD,OAAOc,YAAY,CAACC,QAAQ,CAACX,WAAW,CAACY,MAAM,EAAE,CAAC,CACjDC,IAAI,CAAClB,GAAG,CACNmB,OAAwB,IAAI;IAC3B,IAAGA,OAAO,EACV;MACE,OAAO,IAAI;IACb,CAAC,MAED;MACE,OAAO,KAAK;IACd;EACF,CAAC,CACF,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAgBA,CAACjB,KAAK,EAAEC,KAAK,KAAI;EAC7D,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAG,CAACO,WAAW,CAACE,UAAU,EAAE,EAC5B;IACED,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}