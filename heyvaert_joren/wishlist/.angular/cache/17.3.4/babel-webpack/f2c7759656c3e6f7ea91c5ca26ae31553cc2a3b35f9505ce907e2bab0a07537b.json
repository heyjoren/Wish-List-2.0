{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Directive, HostBinding, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet PasswdRequirementsDirective = class PasswdRequirementsDirective {\n  constructor() {\n    this.touchedSubject = new BehaviorSubject(false);\n    this.dirtySubject = new BehaviorSubject(false);\n    this.textColor = 'black';\n  }\n  ngOnInit() {\n    this.config.control.valueChanges.subscribe(value => {\n      this.checkRequirement(value);\n    });\n  }\n  checkRequirement(value) {\n    if (this.config.control.touched || this.config.control.dirty) {\n      switch (this.config.requirement) {\n        case 'minlength':\n          if (value.length < 8) {\n            this.textColor = 'red';\n          } else {\n            this.textColor = 'green';\n          }\n          break;\n        case 'hasUppercaseAndLower':\n          if (value.match(/[a-z]/) && value.match(/[A-Z]/)) {\n            this.textColor = 'green';\n          } else {\n            this.textColor = 'red';\n          }\n          break;\n        case 'hasNumber':\n          if (/[\\d]/.test(value)) {\n            this.textColor = 'green';\n          } else {\n            this.textColor = 'red';\n          }\n          break;\n        case 'hasSpecialChar':\n          if (/[\\W\\_]/.test(value)) {\n            this.textColor = 'green';\n          } else {\n            this.textColor = 'red';\n          }\n          break;\n        default:\n          this.textColor = 'black';\n      }\n    } else {\n      this.textColor = 'red';\n    }\n  }\n  static #_ = this.ctorParameters = () => [];\n  static #_2 = this.propDecorators = {\n    config: [{\n      type: Input,\n      args: ['appPasswdRequirements']\n    }],\n    textColor: [{\n      type: HostBinding,\n      args: ['style.color']\n    }]\n  };\n};\nPasswdRequirementsDirective = __decorate([Directive({\n  selector: '[appPasswdRequirements]',\n  standalone: true\n})], PasswdRequirementsDirective);\nexport { PasswdRequirementsDirective };","map":{"version":3,"names":["Directive","HostBinding","Input","BehaviorSubject","PasswdRequirementsDirective","constructor","touchedSubject","dirtySubject","textColor","ngOnInit","config","control","valueChanges","subscribe","value","checkRequirement","touched","dirty","requirement","length","match","test","_","args","__decorate","selector","standalone"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\passwd-requirements.directive.ts"],"sourcesContent":["import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[appPasswdRequirements]',\r\n  standalone: true\r\n})\r\nexport class PasswdRequirementsDirective {\r\n\r\n  private touchedSubject = new BehaviorSubject<boolean>(false);\r\n  private dirtySubject = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor() { }\r\n\r\n  @Input('appPasswdRequirements') config!: {control: AbstractControl, requirement: string}\r\n  @HostBinding('style.color') textColor: string = 'black';\r\n\r\n  ngOnInit(): void {\r\n    this.config.control.valueChanges.subscribe(value => {\r\n      this.checkRequirement(value);  \r\n    });\r\n\r\n  }\r\n\r\n  private checkRequirement(value: string): void\r\n  {\r\n    if(this.config.control.touched || this.config.control.dirty)\r\n    {\r\n      switch (this.config.requirement)\r\n      {\r\n        case 'minlength':\r\n              if (value.length < 8) \r\n              {\r\n                this.textColor = 'red';\r\n              } else\r\n              {\r\n                this.textColor = 'green';\r\n              }\r\n              break;\r\n            case 'hasUppercaseAndLower':\r\n              if (value.match(/[a-z]/) && value.match(/[A-Z]/)) {\r\n                this.textColor = 'green';\r\n              }\r\n              else{\r\n                this.textColor = 'red';\r\n              }\r\n              break;\r\n            case 'hasNumber':\r\n              if(/[\\d]/.test(value))\r\n              {\r\n                this.textColor = 'green';\r\n              }\r\n              else {\r\n                this.textColor = 'red';\r\n              }\r\n              break;\r\n            case 'hasSpecialChar':\r\n              if(/[\\W\\_]/.test(value))\r\n              {\r\n                this.textColor = 'green';\r\n              }\r\n              else {\r\n                this.textColor = 'red';\r\n              }\r\n              break;\r\n            default:\r\n              this.textColor='black'\r\n      }\r\n    }\r\n    else{\r\n      this.textColor = 'red';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,KAAK,QAAQ,eAAe;AAE7D,SAASC,eAAe,QAAQ,MAAM;AAM/B,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAKtCC,YAAA;IAHQ,KAAAC,cAAc,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACpD,KAAAI,YAAY,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IAK9B,KAAAK,SAAS,GAAW,OAAO;EAHvC;EAKhBC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MACjD,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAAC;IAC9B,CAAC,CAAC;EAEJ;EAEQC,gBAAgBA,CAACD,KAAa;IAEpC,IAAG,IAAI,CAACJ,MAAM,CAACC,OAAO,CAACK,OAAO,IAAI,IAAI,CAACN,MAAM,CAACC,OAAO,CAACM,KAAK,EAC3D;MACE,QAAQ,IAAI,CAACP,MAAM,CAACQ,WAAW;QAE7B,KAAK,WAAW;UACV,IAAIJ,KAAK,CAACK,MAAM,GAAG,CAAC,EACpB;YACE,IAAI,CAACX,SAAS,GAAG,KAAK;UACxB,CAAC,MACD;YACE,IAAI,CAACA,SAAS,GAAG,OAAO;UAC1B;UACA;QACF,KAAK,sBAAsB;UACzB,IAAIM,KAAK,CAACM,KAAK,CAAC,OAAO,CAAC,IAAIN,KAAK,CAACM,KAAK,CAAC,OAAO,CAAC,EAAE;YAChD,IAAI,CAACZ,SAAS,GAAG,OAAO;UAC1B,CAAC,MACG;YACF,IAAI,CAACA,SAAS,GAAG,KAAK;UACxB;UACA;QACF,KAAK,WAAW;UACd,IAAG,MAAM,CAACa,IAAI,CAACP,KAAK,CAAC,EACrB;YACE,IAAI,CAACN,SAAS,GAAG,OAAO;UAC1B,CAAC,MACI;YACH,IAAI,CAACA,SAAS,GAAG,KAAK;UACxB;UACA;QACF,KAAK,gBAAgB;UACnB,IAAG,QAAQ,CAACa,IAAI,CAACP,KAAK,CAAC,EACvB;YACE,IAAI,CAACN,SAAS,GAAG,OAAO;UAC1B,CAAC,MACI;YACH,IAAI,CAACA,SAAS,GAAG,KAAK;UACxB;UACA;QACF;UACE,IAAI,CAACA,SAAS,GAAC,OAAO;MAC9B;IACF,CAAC,MACG;MACF,IAAI,CAACA,SAAS,GAAG,KAAK;IACxB;EAEF;EAAC,QAAAc,CAAA,G;;;YA3DApB,KAAK;MAAAqB,IAAA,GAAC,uBAAuB;IAAA;;YAC7BtB,WAAW;MAAAsB,IAAA,GAAC,aAAa;IAAA;;;AARfnB,2BAA2B,GAAAoB,UAAA,EAJvCxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,yBAAyB;EACnCC,UAAU,EAAE;CACb,CAAC,C,EACWtB,2BAA2B,CAoEvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}