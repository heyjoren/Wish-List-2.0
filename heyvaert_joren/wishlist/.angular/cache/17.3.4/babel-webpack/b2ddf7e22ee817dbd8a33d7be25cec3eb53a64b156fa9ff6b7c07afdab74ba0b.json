{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HEYVA/OneDrive - Thomas More/Documenten/School/School jaar 2024 - 2025/Web development/Labo/Eigen/Project/Wish-List-2.0/wishlist/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@angular/fire/auth';\nimport { collection, doc, Firestore, getDocs, setDoc } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nlet AuthService = class AuthService {\n  constructor(router, auth, db) {\n    this.router = router;\n    this.auth = auth;\n    this.db = db;\n    this.token = null;\n    if (localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n    }\n  }\n  //synchrone validator\n  passwdValidation(control) {\n    const value = control.value || '';\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    const hasNumber = /\\d/.test(value);\n    const hasSpecialChar = /[\\W\\_]/.test(value);\n    const valid = hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;\n    return !valid ? {\n      passwordStrength: true\n    } : null;\n  }\n  // asynchrone validator\n  emailExists(inputEmail) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const emails = yield _this.emailsAlreadyRegisterd();\n      if (emails.includes(inputEmail)) {\n        return {\n          emailExists: true\n        };\n      }\n      return null;\n    })();\n  }\n  signUp(user) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield createUserWithEmailAndPassword(_this2.auth, user.email, user.passwd);\n        const userId = _this2.auth.currentUser.uid;\n        yield _this2.signupUserData(userId, user);\n        return 'success';\n      } catch (error) {\n        console.log(error);\n        return 'could not create a user: ' + error.message;\n      }\n    })();\n  }\n  signupUserData(userId, user) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const userRef = doc(_this3.db, 'user', userId);\n      try {\n        const {\n          passwd,\n          ...userWithoutEmailAndPasswd\n        } = user; //om passwd niet in de db te laten opslaan.\n        yield setDoc(userRef, {\n          ...userWithoutEmailAndPasswd,\n          role: 1\n        }); //de ... is om alle velden van user toe te voegen.\n        return 'success';\n      } catch (error) {\n        console.log(error);\n        throw new Error('Error saving user data: ' + error);\n      }\n    })();\n  }\n  login(user) {\n    return signInWithEmailAndPassword(this.auth, user.email, user.passwd).then(() => {\n      return this.auth.currentUser?.getIdToken().then(token => {\n        this.token = token;\n        localStorage.setItem('token', token);\n        return true;\n      });\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  }\n  isLoggedIn() {\n    return this.token != null;\n  }\n  logOut() {\n    this.router.navigate(['']);\n    this.token = null;\n    localStorage.removeItem('token');\n    this.auth.signOut();\n  }\n  emailsAlreadyRegisterd() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const emails = [];\n      try {\n        const usersRef = collection(_this4.db, 'user');\n        const allUsers = yield getDocs(usersRef);\n        allUsers.forEach(user => {\n          const userData = user.data();\n          emails.push(userData.email);\n        });\n        return emails;\n      } catch (error) {\n        console.error('Error fetching registered emails:', error);\n        return [];\n      }\n    })();\n  }\n  getUid() {\n    if (this.auth.currentUser) {\n      return this.auth.currentUser.uid;\n    } else {\n      return null;\n    }\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Router\n  }, {\n    type: Auth\n  }, {\n    type: Firestore\n  }];\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"names":["Injectable","Auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","collection","doc","Firestore","getDocs","setDoc","Router","AuthService","constructor","router","auth","db","token","localStorage","getItem","passwdValidation","control","value","hasUpperCase","test","hasLowerCase","hasNumber","hasSpecialChar","valid","passwordStrength","emailExists","inputEmail","_this","_asyncToGenerator","emails","emailsAlreadyRegisterd","includes","signUp","user","_this2","email","passwd","userId","currentUser","uid","signupUserData","error","console","log","message","_this3","userRef","userWithoutEmailAndPasswd","role","Error","login","then","getIdToken","setItem","catch","isLoggedIn","logOut","navigate","removeItem","signOut","_this4","usersRef","allUsers","forEach","userData","data","push","getUid","_","__decorate","providedIn"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Auth, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, getAuth, signInWithEmailAndPassword } from '@angular/fire/auth';\r\nimport { collection, CollectionReference, doc, Firestore, getDoc, getDocs, setDoc } from '@angular/fire/firestore';\r\nimport { AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { user } from './user/user.module';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  token: string | null = null;\r\n\r\n  constructor( private router: Router, private auth: Auth, private db: Firestore) { \r\n    if(localStorage.getItem('token'))\r\n    {\r\n      this.token = localStorage.getItem('token');\r\n    }\r\n  }\r\n\r\n  //synchrone validator\r\n  passwdValidation(control: AbstractControl): ValidationErrors | null { \r\n    const value = control.value || '';\r\n    const hasUpperCase = /[A-Z]/.test(value);\r\n    const hasLowerCase = /[a-z]/.test(value);\r\n    const hasNumber = /\\d/.test(value);\r\n    const hasSpecialChar = /[\\W\\_]/.test(value);\r\n\r\n    const valid = hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;\r\n\r\n    return !valid ? {passwordStrength: true} : null;\r\n  } \r\n\r\n  // asynchrone validator\r\n  async emailExists(inputEmail: string): Promise<ValidationErrors | null> {\r\n    const emails = await this.emailsAlreadyRegisterd();\r\n    if (emails.includes(inputEmail)) {\r\n      return { emailExists: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  async signUp(user: user): Promise<string>{\r\n    try {\r\n    await createUserWithEmailAndPassword(this.auth, user.email, user.passwd);\r\n    const userId = this.auth.currentUser!.uid;\r\n\r\n    await this.signupUserData(userId, user);\r\n\r\n    return 'success';\r\n  } catch (error) {\r\n    console.log(error);\r\n    return 'could not create a user: ' + (error as Error).message;\r\n  }\r\n  }\r\n\r\n  async signupUserData(userId : string, user : user): Promise<string>{\r\n    \r\n    const userRef = doc(this.db, 'user', userId);\r\n    try {\r\n      const { passwd, ...userWithoutEmailAndPasswd } = user; //om passwd niet in de db te laten opslaan.\r\n      await setDoc(userRef, {...userWithoutEmailAndPasswd, role: 1}); //de ... is om alle velden van user toe te voegen.\r\n      return 'success';\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error('Error saving user data: ' + error);\r\n    }\r\n  }\r\n\r\n  login(user: user){\r\n    return signInWithEmailAndPassword(this.auth, user.email, user.passwd)\r\n    .then( () => {\r\n      return this.auth.currentUser?.getIdToken()\r\n      .then(\r\n        (token: string) => {\r\n          this.token = token;\r\n          localStorage.setItem('token', token);\r\n          return true\r\n        }\r\n      );\r\n    })\r\n    .catch( \r\n      error => {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  isLoggedIn():boolean {\r\n    return this.token != null;\r\n  }\r\n\r\n  logOut(): void {\r\n    this.router.navigate([''])\r\n    this.token = null;\r\n    localStorage.removeItem('token');\r\n    this.auth.signOut();\r\n\r\n  }\r\n\r\n  async emailsAlreadyRegisterd(): Promise<string[]>\r\n  {\r\n    const emails: string[] = [];\r\n    try {\r\n      const usersRef = collection(this.db, 'user') as CollectionReference<user>;\r\n\r\n      const allUsers = await getDocs(usersRef);\r\n      \r\n      allUsers.forEach((user) => {\r\n        const userData = user.data();\r\n        emails.push(userData.email);\r\n      });\r\n  \r\n      return emails;\r\n    } catch (error) {\r\n      console.error('Error fetching registered emails:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getUid()\r\n  {\r\n    if(this.auth.currentUser)\r\n    {\r\n      return this.auth.currentUser.uid;\r\n    }\r\n    else\r\n    {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}