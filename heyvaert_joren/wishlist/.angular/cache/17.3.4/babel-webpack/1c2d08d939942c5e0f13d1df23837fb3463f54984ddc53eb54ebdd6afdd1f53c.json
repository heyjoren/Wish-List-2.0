{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HEYVA/OneDrive - Thomas More/Documenten/School/School jaar 2024 - 2025/Web development/Labo/Eigen/Project/Wish-List-2.0/wishlist/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { LoginComponent } from './login.component';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { BackendAdminService } from '../admin/backend-admin.service';\nimport { Auth } from '@angular/fire/auth';\nimport { Firestore } from '@angular/fire/firestore';\nimport { By } from '@angular/platform-browser';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    const mockAuth = {}; // Mock object voor Auth\n    const mockFirestore = {}; // Mock object voor Firestore\n    yield TestBed.configureTestingModule({\n      imports: [LoginComponent],\n      providers: [\n      // FormBuilder,\n      // AuthService,\n      // Router,\n      // BackendAdminService,\n      // Auth,\n      // Firestore\n      FormBuilder, AuthService, {\n        provide: Router,\n        useValue: {}\n      },\n      // simuleren\n      BackendAdminService, {\n        provide: Auth,\n        useValue: mockAuth\n      },\n      // simuleren\n      {\n        provide: Firestore,\n        useValue: mockFirestore\n      } // simuleren\n      ]\n    }).compileComponents();\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    // fixture.detectChanges();\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('email should not be empty', () => {\n    let emailerr;\n    const email = component.form.get('email');\n    email?.setValue('');\n    expect(email?.status).toEqual(\"INVALID\");\n    expect(email?.hasError('required')).toBeTrue();\n    fixture.detectChanges();\n    fixture.whenStable().then(() => {\n      emailerr = fixture.debugElement.query(By.css('.credentials span')).nativeElement;\n      expect(emailerr.textContent).toContain('Wachtwoord of email onjuist');\n    });\n  });\n});","map":{"version":3,"names":["TestBed","LoginComponent","FormBuilder","AuthService","Router","BackendAdminService","Auth","Firestore","By","describe","component","fixture","beforeEach","_asyncToGenerator","mockAuth","mockFirestore","configureTestingModule","imports","providers","provide","useValue","compileComponents","createComponent","componentInstance","it","expect","toBeTruthy","emailerr","email","form","get","setValue","status","toEqual","hasError","toBeTrue","detectChanges","whenStable","then","debugElement","query","css","nativeElement","textContent","toContain"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\auth\\login\\login.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { BackendAdminService } from '../admin/backend-admin.service';\r\nimport { Auth } from '@angular/fire/auth';\r\nimport { Firestore } from '@angular/fire/firestore';\r\nimport { By } from '@angular/platform-browser';\r\n\r\ndescribe('LoginComponent', () => {\r\n  let component: LoginComponent;\r\n  let fixture: ComponentFixture<LoginComponent>;\r\n\r\n  beforeEach(async () => {\r\n    const mockAuth = {}; // Mock object voor Auth\r\n    const mockFirestore = {}; // Mock object voor Firestore\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [LoginComponent],\r\n      providers: [\r\n        // FormBuilder,\r\n        // AuthService,\r\n        // Router,\r\n        // BackendAdminService,\r\n\r\n        // Auth,\r\n        // Firestore\r\n        FormBuilder,\r\n        AuthService,\r\n        { provide: Router, useValue: {} }, // simuleren\r\n        BackendAdminService,\r\n        { provide: Auth, useValue: mockAuth }, // simuleren\r\n        { provide: Firestore, useValue: mockFirestore } // simuleren\r\n      ]\r\n    })\r\n    .compileComponents();\r\n    \r\n    fixture = TestBed.createComponent(LoginComponent);\r\n    component = fixture.componentInstance;\r\n    // fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('email should not be empty', () => {\r\n    let emailerr;\r\n    const email = component.form.get('email');\r\n\r\n    email?.setValue('');\r\n    expect(email?.status).toEqual(\"INVALID\");\r\n    expect(email?.hasError('required')).toBeTrue();\r\n    fixture.detectChanges();\r\n    fixture.whenStable().then(() => {\r\n      emailerr = fixture.debugElement.query(By.css('.credentials span')).nativeElement;\r\n      expect(emailerr.textContent).toContain('Wachtwoord of email onjuist');\r\n    })\r\n  });\r\n});\r\n"],"mappings":";AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AAEjE,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,EAAE,QAAQ,2BAA2B;AAE9CC,QAAQ,CAAC,gBAAgB,EAAE,MAAK;EAC9B,IAAIC,SAAyB;EAC7B,IAAIC,OAAyC;EAE7CC,UAAU,eAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,aAAa,GAAG,EAAE,CAAC,CAAC;IAE1B,MAAMf,OAAO,CAACgB,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAAChB,cAAc,CAAC;MACzBiB,SAAS,EAAE;MACT;MACA;MACA;MACA;MAEA;MACA;MACAhB,WAAW,EACXC,WAAW,EACX;QAAEgB,OAAO,EAAEf,MAAM;QAAEgB,QAAQ,EAAE;MAAE,CAAE;MAAE;MACnCf,mBAAmB,EACnB;QAAEc,OAAO,EAAEb,IAAI;QAAEc,QAAQ,EAAEN;MAAQ,CAAE;MAAE;MACvC;QAAEK,OAAO,EAAEZ,SAAS;QAAEa,QAAQ,EAAEL;MAAa,CAAE,CAAC;MAAA;KAEnD,CAAC,CACDM,iBAAiB,EAAE;IAEpBV,OAAO,GAAGX,OAAO,CAACsB,eAAe,CAACrB,cAAc,CAAC;IACjDS,SAAS,GAAGC,OAAO,CAACY,iBAAiB;IACrC;EACF,CAAC,EAAC;EAEFC,EAAE,CAAC,eAAe,EAAE,MAAK;IACvBC,MAAM,CAACf,SAAS,CAAC,CAACgB,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,2BAA2B,EAAE,MAAK;IACnC,IAAIG,QAAQ;IACZ,MAAMC,KAAK,GAAGlB,SAAS,CAACmB,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC;IAEzCF,KAAK,EAAEG,QAAQ,CAAC,EAAE,CAAC;IACnBN,MAAM,CAACG,KAAK,EAAEI,MAAM,CAAC,CAACC,OAAO,CAAC,SAAS,CAAC;IACxCR,MAAM,CAACG,KAAK,EAAEM,QAAQ,CAAC,UAAU,CAAC,CAAC,CAACC,QAAQ,EAAE;IAC9CxB,OAAO,CAACyB,aAAa,EAAE;IACvBzB,OAAO,CAAC0B,UAAU,EAAE,CAACC,IAAI,CAAC,MAAK;MAC7BX,QAAQ,GAAGhB,OAAO,CAAC4B,YAAY,CAACC,KAAK,CAAChC,EAAE,CAACiC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAACC,aAAa;MAChFjB,MAAM,CAACE,QAAQ,CAACgB,WAAW,CAAC,CAACC,SAAS,CAAC,6BAA6B,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}