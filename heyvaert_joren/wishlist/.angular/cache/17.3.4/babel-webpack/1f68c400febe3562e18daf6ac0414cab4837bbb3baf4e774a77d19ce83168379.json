{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { user } from '../user/user.module';\nimport { Router } from '@angular/router';\nimport { BackendAdminService } from '../admin/backend-admin.service';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authService, router, adminService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.adminService = adminService;\n    this.showPassword = false;\n    this.user = new user();\n    this.falsLoggin = false;\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      'credentials': this.fb.group({\n        'email': [null, {\n          validators: [Validators.required, Validators.email]\n        }],\n        'passwd': [null, {\n          validators: [Validators.required, Validators.minLength(8), this.authService.passwdValidation]\n        }]\n      })\n    });\n    this.falsLoggin = false;\n  }\n  /**\n   * admin user:\n   *    email:  joren@joren.com\n   *    passwd: Joren123*\n   *\n   *  user:\n   *    email:  test@test.com\n   *    psswd:  Test123*\n   */\n  onSubmit() {\n    this.user.email = this.form.value.credentials.email;\n    this.user.passwd = this.form.value.credentials.passwd;\n    this.authService.login(this.user).then(response => {\n      if (!response) {\n        this.falsLoggin = true;\n      } else {\n        this.falsLoggin = false;\n        this.router.navigate(['home']);\n        this.adminSubscription = this.adminService.getAdmin(this.authService.getUid()).subscribe(admin => {\n          if (admin) {\n            this.adminService.checkAdmin(true);\n          } else {\n            this.adminService.checkAdmin(false);\n          }\n          this.adminSubscription.unsubscribe();\n        });\n      }\n    });\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  get email() {\n    const naam = this.form.controls['credentials'];\n    return naam.controls['email'];\n  }\n  get passwd() {\n    const naam = this.form.controls['credentials'];\n    return naam.controls['passwd'];\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: AuthService\n  }, {\n    type: Router\n  }, {\n    type: BackendAdminService\n  }];\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["CommonModule","Component","FormBuilder","ReactiveFormsModule","Validators","AuthService","user","Router","BackendAdminService","LoginComponent","constructor","fb","authService","router","adminService","showPassword","falsLoggin","ngOnInit","form","group","validators","required","email","minLength","passwdValidation","onSubmit","value","credentials","passwd","login","then","response","navigate","adminSubscription","getAdmin","getUid","subscribe","admin","checkAdmin","unsubscribe","togglePasswordVisibility","naam","controls","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { user } from '../user/user.module';\r\nimport { Router } from '@angular/router';\r\nimport { BackendAdminService } from '../admin/backend-admin.service';\r\nimport { admin } from '../admin/admin/admin.module';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, CommonModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form!: FormGroup;\r\n  showPassword: boolean = false;\r\n  user: user = new user();\r\n  falsLoggin: boolean = false;\r\n  adminSubscription!: Subscription;\r\n\r\n  constructor(private fb : FormBuilder, private authService: AuthService, private router: Router, private adminService: BackendAdminService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      'credentials': this.fb.group({\r\n        'email': [null, {\r\n        validators: [Validators.required, Validators.email]\r\n        }],\r\n        'passwd': [null, {\r\n          validators: [Validators.required, Validators.minLength(8), this.authService.passwdValidation]\r\n        }]\r\n      })\r\n    });\r\n\r\n    this.falsLoggin = false;\r\n  }\r\n\r\n  /**\r\n   * admin user:\r\n   *    email:  joren@joren.com\r\n   *    passwd: Joren123*\r\n   *  \r\n   *  user:\r\n   *    email:  test@test.com\r\n   *    psswd:  Test123*\r\n   */\r\n  onSubmit(): void {\r\n    this.user.email = this.form.value.credentials.email;\r\n    this.user.passwd = this.form.value.credentials.passwd;\r\n    \r\n    this.authService.login(this.user)\r\n    .then( (response) => {\r\n      if (!response) {\r\n        this.falsLoggin = true;\r\n      }\r\n      else {\r\n        this.falsLoggin = false;\r\n        \r\n        this.router.navigate(['home']);\r\n\r\n        this.adminSubscription = this.adminService.getAdmin(this.authService.getUid()).subscribe((admin) => {\r\n          if(admin)\r\n          {\r\n            this.adminService.checkAdmin(true);\r\n          }\r\n          else\r\n          {\r\n            this.adminService.checkAdmin(false);\r\n\r\n          }\r\n          this.adminSubscription.unsubscribe();\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  togglePasswordVisibility():void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n  get email() {\r\n    const naam = this.form.controls['credentials'] as FormGroup;\r\n    return naam.controls['email']\r\n  }\r\n\r\n  get passwd() {\r\n    const naam = this.form.controls['credentials'] as FormGroup;\r\n    return naam.controls['passwd']\r\n  }\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}