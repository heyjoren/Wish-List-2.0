{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { map, Subject, from } from 'rxjs';\nimport { collection, collectionData, deleteDoc, doc, Firestore, setDoc, where, query } from '@angular/fire/firestore';\nimport { AuthService } from '../auth/auth.service';\nimport { SortBedragenByDatePipePipe } from '../sort-bedragen-by-date-pipe.pipe';\nlet BedragService = class BedragService {\n  constructor(db, auth, sortBedragenByDatePipe) {\n    this.db = db;\n    this.auth = auth;\n    this.sortBedragenByDatePipe = sortBedragenByDatePipe;\n    this.bedragen = [];\n    this.bedragenUpdated = new Subject();\n    this.selectedItemId = null;\n  }\n  getBedragen() {\n    return collectionData(query(collection(this.db, 'bedrag'), where(\"uid\", \"==\", this.auth.getUid())), {\n      idField: 'id'\n    });\n  }\n  getBedragenPut() {\n    this.getBedragen().pipe(map(bedragen => bedragen.map(bedrag => {\n      bedrag.datum = this.getDate(bedrag.datum);\n      return bedrag;\n    })), map(bedragen => this.sortBedragenByDatePipe.transform(bedragen))).subscribe({\n      next: response => {\n        this.bedragen = response;\n        this.bedragenUpdated.next(this.bedragen);\n      },\n      error: error => console.log('error: ', error)\n    });\n  }\n  getLastBedragen() {\n    return this.getBedragen().pipe(map(bedragen => bedragen.slice(-5)));\n  }\n  addBedrag(bedrag) {\n    const newID = doc(collection(this.db, 'id')).id;\n    const ref = doc(this.db, 'bedrag/' + newID);\n    return from(setDoc(ref, bedrag));\n  }\n  deleteBedrag(id) {\n    const bedragRef = doc(this.db, 'bedrag/' + id);\n    return from(deleteDoc(bedragRef));\n  }\n  getDate(dateField) {\n    if (dateField && dateField.toDate) {\n      return dateField.toDate();\n    }\n    return new Date(dateField);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Firestore\n  }, {\n    type: AuthService\n  }, {\n    type: SortBedragenByDatePipePipe\n  }];\n};\nBedragService = __decorate([Injectable({\n  providedIn: 'root'\n})], BedragService);\nexport { BedragService };","map":{"version":3,"names":["Injectable","map","Subject","from","collection","collectionData","deleteDoc","doc","Firestore","setDoc","where","query","AuthService","SortBedragenByDatePipePipe","BedragService","constructor","db","auth","sortBedragenByDatePipe","bedragen","bedragenUpdated","selectedItemId","getBedragen","getUid","idField","getBedragenPut","pipe","bedrag","datum","getDate","transform","subscribe","next","response","error","console","log","getLastBedragen","slice","addBedrag","newID","id","ref","deleteBedrag","bedragRef","dateField","toDate","Date","_","__decorate","providedIn"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\bedrag\\bedrag.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, map, tap, Subject, from   } from 'rxjs';\r\nimport { bedrag } from './bedrag.model';\r\nimport { collection, collectionData, CollectionReference, deleteDoc, doc, DocumentReference, Firestore, setDoc, where, query, Timestamp } from '@angular/fire/firestore';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { SortBedragenByDatePipePipe } from '../sort-bedragen-by-date-pipe.pipe';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BedragService {\r\n  bedragen: bedrag[] = [];\r\n  bedragenUpdated = new Subject<bedrag[]>();\r\n  selectedItemId: string | null = null;\r\n\r\n  constructor(private db: Firestore, private auth: AuthService, private sortBedragenByDatePipe: SortBedragenByDatePipePipe ) { }\r\n\r\n  getBedragen(): Observable<bedrag[]> {\r\n    return collectionData<bedrag>(\r\n      query(\r\n        collection(this.db, 'bedrag') as CollectionReference<bedrag>,\r\n        where(\"uid\", \"==\", this.auth.getUid())\r\n      ),\r\n      { idField: 'id' }\r\n    );\r\n  }\r\n\r\n  getBedragenPut(): void {\r\n    this.getBedragen().pipe(\r\n      map(bedragen => \r\n        bedragen.map(bedrag => {\r\n          bedrag.datum = this.getDate(bedrag.datum);\r\n          return bedrag;\r\n        })\r\n      ),\r\n      map(bedragen => this.sortBedragenByDatePipe.transform(bedragen))\r\n    ).subscribe({  \r\n      next: (response: bedrag[]) => {\r\n          this.bedragen = response;\r\n          this.bedragenUpdated.next(this.bedragen);\r\n      },\r\n    error: (error) => console.log('error: ', error)\r\n    });\r\n  }\r\n\r\n  getLastBedragen(): Observable<bedrag[]> {\r\n    return this.getBedragen().pipe(\r\n      map(bedragen => bedragen.slice(-5))\r\n    );\r\n  }\r\n\r\n\r\n  addBedrag(bedrag: bedrag) {\r\n    const newID = doc(collection(this.db, 'id')).id;\r\n    const ref = doc(this.db, 'bedrag/' + newID);\r\n    return from (setDoc(ref, bedrag));\r\n  }\r\n\r\n  deleteBedrag(id: string) {\r\n    const bedragRef = doc(this.db, 'bedrag/' + id) as DocumentReference<bedrag>;\r\n    return from(deleteDoc(bedragRef));\r\n  }\r\n\r\n  private getDate(dateField: any): Date {\r\n    if (dateField && dateField.toDate) {\r\n      return dateField.toDate();\r\n    }\r\n    return new Date(dateField);\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}