{"ast":null,"code":"import { TestBed } from '@angular/core/testing';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { Auth } from '@angular/fire/auth';\nimport { Firestore } from '@angular/fire/firestore';\ndescribe('AuthService', () => {\n  let service;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [Router, Auth, Firestore]\n    });\n    service = TestBed.inject(AuthService);\n  });\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n});","map":{"version":3,"names":["TestBed","AuthService","Router","Auth","Firestore","describe","service","beforeEach","configureTestingModule","providers","inject","it","expect","toBeTruthy"],"sources":["C:\\Users\\HEYVA\\OneDrive - Thomas More\\Documenten\\School\\School jaar 2024 - 2025\\Web development\\Labo\\Eigen\\Project\\Wish-List-2.0\\wishlist\\src\\app\\auth\\auth.service.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Auth } from '@angular/fire/auth';\r\nimport { Firestore } from '@angular/fire/firestore';\r\n\r\ndescribe('AuthService', () => {\r\n  let service: AuthService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n        providers: [\r\n            Router,\r\n            Auth,\r\n            Firestore\r\n          ]\r\n    });\r\n    service = TestBed.inject(AuthService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAE/C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,SAAS,QAAQ,yBAAyB;AAEnDC,QAAQ,CAAC,aAAa,EAAE,MAAK;EAC3B,IAAIC,OAAoB;EAExBC,UAAU,CAAC,MAAK;IACdP,OAAO,CAACQ,sBAAsB,CAAC;MAC3BC,SAAS,EAAE,CACPP,MAAM,EACNC,IAAI,EACJC,SAAS;KAEhB,CAAC;IACFE,OAAO,GAAGN,OAAO,CAACU,MAAM,CAACT,WAAW,CAAC;EACvC,CAAC,CAAC;EAEFU,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BC,MAAM,CAACN,OAAO,CAAC,CAACO,UAAU,EAAE;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}